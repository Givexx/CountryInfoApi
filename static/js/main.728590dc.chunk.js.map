{"version":3,"sources":["search.png","Country.js","geoFlag.svg","errorImg.jpg","App.js","index.js"],"names":["Country","props","name","nativeName","language","capital","subregion","population","area","currency","className","App","useState","error","setError","isLoaded","setIsLoaded","items","setItems","answer","setAnswer","geoFlag","flag","setFlag","setName","setNativeName","setLanguage","setCapital","setSubRegion","setPopulation","setArea","setCurrency","useEffect","fetch","then","res","json","result","count","length","numberWithCommas","x","toString","replace","message","value","onChange","e","target","type","placeholder","autoFocus","onClick","i","reg","RegExp","reg2","match","languages","currencies","symbol","errorImg","src","search","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.728590dc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/search.e747e30a.png\";","\r\nconst Country = (props) => {\r\n    const {name,nativeName,language,capital,\r\n           subregion,population,area,currency} = props;\r\n           \r\n    return (\r\n        <div className='fields'>\r\n        <div>ქვეყნის დასახელება: {name}</div>\r\n        <div>მშობლიური დასახელება: {nativeName}</div>\r\n        <div>დედაქალაქი: {capital}</div>\r\n        <div>მშობლიური ენა: {language}</div>\r\n        <div>კონტინენტი: {subregion}</div>\r\n        <div>მოსახლეობა: {population}</div>\r\n        <div>ფართობი: {area}</div>\r\n        <div>ვალუტა: {currency}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Country;\r\n\r\n","export default __webpack_public_path__ + \"static/media/geoFlag.1bc9ceb0.svg\";","export default __webpack_public_path__ + \"static/media/errorImg.0d10f9b7.jpg\";","import { useEffect, useState } from 'react';\nimport search from '../src/search.png';\nimport Country from './Country';\nimport geoFlag from '../src/geoFlag.svg';\nimport errorImg from '../src/errorImg.jpg';\n\nfunction App() {\n  \n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [answer, setAnswer] = useState('');\n\n  const [flag, setFlag] = useState(geoFlag);\n  const [name, setName] = useState('Georgia');\n  const [nativeName, setNativeName] = useState('საქართველო');\n  const [language, setLanguage] = useState('Georgian');\n  const [capital, setCapital] = useState('Tbilisi');\n  const [subregion, setSubRegion] = useState('Western Asia');\n  const [population, setPopulation] = useState('3,720,400');\n  const [area, setArea] = useState('69,700 კმ²');\n  const [currency, setCurrency] = useState('ლ Georgian Lari');\n\n  useEffect(() => {\n    fetch(\"https://restcountries.com/v2/all\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setItems(result);\n          setIsLoaded(true);\n        },\n        (error) => {\n          setError(error);\n          setIsLoaded(true);\n        }\n      )\n  }, []);\n \n  let count = items.length;\n\n  const numberWithCommas = (x) => {\n   return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  const find = () => {\n    for (let i = 0; i <= items.length; i++){\n      let reg = new RegExp(items[i].name, 'i');\n      let reg2 = new RegExp(items[i].nativeName, 'i');\n        if(answer.match(reg) || answer.match(reg2)){\n          return (\n          setAnswer(''),\n          setFlag(items[i].flag),\n          setName(items[i].name),\n          setNativeName(items[i].nativeName),\n          setCapital(items[i].capital),\n          setLanguage(items[i].languages[0].name),\n          setSubRegion(items[i].subregion),\n          setPopulation(numberWithCommas(items[i].population)),\n          setArea(numberWithCommas(items[i].area) + ' კმ²'),\n          setCurrency(items[i].currencies[0].symbol + ' ' + items[i].currencies[0].name)\n          )\n    } else if (!answer.match(reg)){\n      count--;\n      if(count <= 0){\n        return (\n          setAnswer(''),\n          setFlag(errorImg),\n          setName('---'),\n          setNativeName('---'),\n          setCapital('---'),\n          setLanguage('---'),\n          setSubRegion('---'),\n          setPopulation('---'),\n          setArea('---'),\n          setCurrency('---')\n        )\n      }\n    }\n  }\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <h2>Loading...</h2>;\n  } else {\n    return (\n    <div className='container'>\n      <div className='inp'>\n      <input value={answer} onChange={(e) => setAnswer(e.target.value)} type='text' placeholder='ქვეყნის დასახელება' autoFocus/>\n      <img onClick={find} className='search' src={search} alt='logo' />\n      </div>\n      <div className='ff'>\n      <img  className='flag' src={flag} alt='imgg' />\n      </div>\n        <Country\n        name={name}\n        nativeName={nativeName}\n        capital={capital}\n        language={language}\n        subregion={subregion}\n        population={population}\n        area={area}\n        currency={currency} \n        />\n    </div>\n  );\n  }\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}